const Usuario = require('./models/documento');

mongoose.connect('mongodb+srv://admin:admin@cluster0.hwgabjr.mongodb.net/www',{useNewUrlParser: true, useUnifiedTopology: true});

const typeDefs = gql`
type Usuario{
    id: ID!
    email: String!
    pass: String!
}

type Alert{
    message: String
}

input UsuarioInput{
    email: String!
    pass: String!
}

type Query{
    getUsuarios: [Usuario]
    getUsuario(id: ID!): Usuario
}

type Mutation{
    addUsuario(input: UsuarioInput): Usuario
    updateUsuario(id: ID!, input: UsuarioInput): Usuario
    deleteUsuario(id: ID!): Alert
}
`;

const resolvers = {
    Query: {
        async getUsuarios(obj){
            const usuarios = await Usuario.find();
            return usuarios;
        },
        async getUsuario(obj, {id}){
            const usuario = await Usuario.findById(id);
            return usuario;
        }
    },
    Mutation: {
        async addUsuario(obj, {input}){
            const usuario = new Usuario(input);
            await usuario.save();
            return usuario;
        },
        async updateUsuario(obj, {id, input}){
            const usuario = await Usuario.findByIdAndUpdate(id, input);
            return usuario;
        },
        async deleteUsuario(obj, {id}){
            await Usuario.deleteOne({_id: id});
            return {
                message: "Usuario eliminado"
            }
        }
    }
}